project_name: auth0-simple-exporter

builds:
  - id: "linux"
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Platform=linux/unknown" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Version={{ .Version }}" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Commit={{ .Commit }}" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Date={{ .Date }}"'
    binary: "{{ .ProjectName }}"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
  - id: "darwin"
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Platform=darwin/unknown" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Version={{ .Version }}" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Commit={{ .Commit }}" -X "github.com/tfadeyi/{{ .ProjectName }}/pkg/version.Date={{ .Date }}"'
    binary: "{{ .ProjectName }}"
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
archives:
  - id: linux
    format: tar.gz
    name_template: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}"
    wrap_in_directory: true
    builds:
      - "linux"
  - id: darwin
    format: tar.gz
    name_template: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}"
    wrap_in_directory: true
    builds:
      - "darwin"

kos:
  - working_dir: .
    id: "linux"
    build: "linux"
    base_image: gcr.io/distroless/base:nonroot
    # labels are going to be supported in goreleaser 1.16.3, waiting for the release
    labels:
      org.opencontainers.image.source: https://github.com/tfadeyi/auth0-simple-exporter
      org.opencontainers.image.description: "Simple Prometheus exporter for Auth0 log events"
      org.opencontainers.image.licenses: APACHE
      org.opencontainers.image.title: "Auth0 Exporter"
      org.opencontainers.image.vendor: ""
      org.opencontainers.image.authors: "Oluwole Fadeyi"

    platforms:
      - linux/amd64
      - linux/arm64
      - linux/arm
    tags:
      - '{{.Tag}}'
      - '{{if not .Prerelease}}latest{{end}}'
    sbom: cyclonedx
    bare: true
    base_import_paths: true

checksum:
  name_template: "{{ .ProjectName }}-SHA256SUMS"
  algorithm: sha256

release:
  draft: true
  prerelease: auto

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^test:"
      - "^chore"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
    - title: "New Features"
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: "Build process updates"
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

signs:
  - cmd: cosign
    args:
      - "sign-blob"
      - "${artifact}"
      - "--output-signature=${signature}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: all

# the image signing doesn't seem to work when using ku to build the image
docker_signs:
  - cmd: cosign
    args:
      - "sign"
      - "${artifact}"
      - "--yes"
    artifacts: all
