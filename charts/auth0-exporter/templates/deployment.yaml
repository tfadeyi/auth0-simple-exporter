apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth0-exporter.fullname" . }}
  labels:
    {{- include "auth0-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "auth0-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "auth0-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "auth0-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default "credentials" .Values.auth0.secretName }}
                  key: token
{{/*            - name: CLIENT_ID*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ default "credentials" .Values.auth0.secretName }}*/}}
{{/*                  key: clientId*/}}
{{/*            - name: CLIENT_SECRET*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ default "credentials" .Values.auth0.secretName }}*/}}
{{/*                  key: clientSecret*/}}
          args:
            - "export"
            {{- if .Values.auth0.domain }}
            - "--auth0.domain"
            - {{ .Values.auth0.domain }}
            {{- end }}
            {{- if .Values.exporter.pprof }}
            - "--profiling"
            {{- end}}
            {{- if .Values.exporter.namespace }}
            - "--namespace"
            - {{- .Values.exporter.namespace }}
            {{- end }}
            {{- if .Values.exporter.port }}
            - "--web.listen-address"
            - "{{- .Values.exporter.port }}"
            {{- end }}
            {{- if .Values.exporter.tls.disabled }}
            - "--tls.disabled"
            {{- else if .Values.exporter.tls.managed }}
            - "--tls.managed"
            - "--tls.host"
            - {{- .Values.exporter.tls.host}}
            {{- else if (not .Values.exporter.tls.managed) }}
            - "--tls.cert-file=/etc/tls-certs/cert-file"
            - "--tls.key-file=/etc/tls-certs/key-file"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ int .Values.exporter.port }}
              protocol: TCP
          {{- if and (not .Values.exporter.tls.disabled) (not .Values.exporter.tls.managed) }}
          volumeMounts:
          - name: tls-certs
            mountPath: "/etc/tls-certs/"
            readOnly: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and (not .Values.exporter.tls.disabled) (not .Values.exporter.tls.managed) }}
      volumes:
        - name: tls-certs
          secret:
            secretName: {{ include "auth0-exporter.fullname" . }}
      {{- end }}